# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.am 3462 2008-06-25 20:54:38Z max $

pkgdatadir = $(datadir)/sfslite
pkgincludedir = $(includedir)/sfslite
pkglibdir = $(libdir)/sfslite
pkglibexecdir = $(libexecdir)/sfslite
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
TESTS = test_aes$(EXEEXT) test_aiod$(EXEEXT) test_armor$(EXEEXT) \
	test_axprt$(EXEEXT) test_backoff$(EXEEXT) \
	test_barrett$(EXEEXT) test_bbuddy$(EXEEXT) \
	test_bitvec$(EXEEXT) test_blowfish$(EXEEXT) \
	test_esign$(EXEEXT) test_itree$(EXEEXT) test_montgom$(EXEEXT) \
	test_mpz_raw$(EXEEXT) test_mpz_square$(EXEEXT) \
	test_mpz_xor$(EXEEXT) test_rabin$(EXEEXT) test_sha1$(EXEEXT) \
	test_srp$(EXEEXT) test_passfd$(EXEEXT) test_tiger$(EXEEXT) \
	test_timecb$(EXEEXT) test_hashcash$(EXEEXT) \
	test_schnorr$(EXEEXT) test_rctree$(EXEEXT) test_vec$(EXEEXT) \
	test_sp1$(EXEEXT) test_sp2$(EXEEXT) test_sp3$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/acsfs.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test_aes$(EXEEXT) test_aiod$(EXEEXT) \
	test_armor$(EXEEXT) test_axprt$(EXEEXT) test_backoff$(EXEEXT) \
	test_barrett$(EXEEXT) test_bbuddy$(EXEEXT) \
	test_bitvec$(EXEEXT) test_blowfish$(EXEEXT) \
	test_esign$(EXEEXT) test_itree$(EXEEXT) test_montgom$(EXEEXT) \
	test_mpz_raw$(EXEEXT) test_mpz_square$(EXEEXT) \
	test_mpz_xor$(EXEEXT) test_rabin$(EXEEXT) test_sha1$(EXEEXT) \
	test_srp$(EXEEXT) test_passfd$(EXEEXT) test_tiger$(EXEEXT) \
	test_timecb$(EXEEXT) test_hashcash$(EXEEXT) \
	test_schnorr$(EXEEXT) test_rctree$(EXEEXT) test_vec$(EXEEXT) \
	test_sp1$(EXEEXT) test_sp2$(EXEEXT) test_sp3$(EXEEXT)
am_test_aes_OBJECTS = test_aes.$(OBJEXT)
test_aes_OBJECTS = $(am_test_aes_OBJECTS)
test_aes_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
test_aes_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_aiod_OBJECTS = test_aiod.$(OBJEXT)
test_aiod_OBJECTS = $(am_test_aiod_OBJECTS)
test_aiod_LDADD = $(LDADD)
test_aiod_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_armor_OBJECTS = test_armor.$(OBJEXT)
test_armor_OBJECTS = $(am_test_armor_OBJECTS)
test_armor_LDADD = $(LDADD)
test_armor_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_axprt_OBJECTS = test_axprt.$(OBJEXT)
test_axprt_OBJECTS = $(am_test_axprt_OBJECTS)
test_axprt_LDADD = $(LDADD)
test_axprt_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_backoff_OBJECTS = test_backoff.$(OBJEXT)
test_backoff_OBJECTS = $(am_test_backoff_OBJECTS)
test_backoff_LDADD = $(LDADD)
test_backoff_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_barrett_OBJECTS = test_barrett.$(OBJEXT)
test_barrett_OBJECTS = $(am_test_barrett_OBJECTS)
test_barrett_LDADD = $(LDADD)
test_barrett_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_bbuddy_OBJECTS = test_bbuddy.$(OBJEXT)
test_bbuddy_OBJECTS = $(am_test_bbuddy_OBJECTS)
test_bbuddy_LDADD = $(LDADD)
test_bbuddy_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_bitvec_OBJECTS = test_bitvec.$(OBJEXT)
test_bitvec_OBJECTS = $(am_test_bitvec_OBJECTS)
test_bitvec_LDADD = $(LDADD)
test_bitvec_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_blowfish_OBJECTS = test_blowfish.$(OBJEXT)
test_blowfish_OBJECTS = $(am_test_blowfish_OBJECTS)
test_blowfish_LDADD = $(LDADD)
test_blowfish_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_esign_OBJECTS = test_esign.$(OBJEXT)
test_esign_OBJECTS = $(am_test_esign_OBJECTS)
test_esign_LDADD = $(LDADD)
test_esign_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_hashcash_OBJECTS = test_hashcash.$(OBJEXT)
test_hashcash_OBJECTS = $(am_test_hashcash_OBJECTS)
test_hashcash_LDADD = $(LDADD)
test_hashcash_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_itree_OBJECTS = test_itree.$(OBJEXT)
test_itree_OBJECTS = $(am_test_itree_OBJECTS)
test_itree_LDADD = $(LDADD)
test_itree_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_montgom_OBJECTS = test_montgom.$(OBJEXT)
test_montgom_OBJECTS = $(am_test_montgom_OBJECTS)
test_montgom_LDADD = $(LDADD)
test_montgom_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mpz_raw_OBJECTS = test_mpz_raw.$(OBJEXT)
test_mpz_raw_OBJECTS = $(am_test_mpz_raw_OBJECTS)
test_mpz_raw_LDADD = $(LDADD)
test_mpz_raw_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mpz_square_OBJECTS = test_mpz_square.$(OBJEXT)
test_mpz_square_OBJECTS = $(am_test_mpz_square_OBJECTS)
test_mpz_square_LDADD = $(LDADD)
test_mpz_square_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mpz_xor_OBJECTS = test_mpz_xor.$(OBJEXT)
test_mpz_xor_OBJECTS = $(am_test_mpz_xor_OBJECTS)
test_mpz_xor_LDADD = $(LDADD)
test_mpz_xor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_passfd_OBJECTS = test_passfd.$(OBJEXT)
test_passfd_OBJECTS = $(am_test_passfd_OBJECTS)
test_passfd_LDADD = $(LDADD)
test_passfd_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rabin_OBJECTS = test_rabin.$(OBJEXT)
test_rabin_OBJECTS = $(am_test_rabin_OBJECTS)
test_rabin_LDADD = $(LDADD)
test_rabin_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rctree_OBJECTS = test_rctree.$(OBJEXT)
test_rctree_OBJECTS = $(am_test_rctree_OBJECTS)
test_rctree_LDADD = $(LDADD)
test_rctree_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_schnorr_OBJECTS = test_schnorr.$(OBJEXT)
test_schnorr_OBJECTS = $(am_test_schnorr_OBJECTS)
test_schnorr_LDADD = $(LDADD)
test_schnorr_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_sha1_OBJECTS = test_sha1.$(OBJEXT)
test_sha1_OBJECTS = $(am_test_sha1_OBJECTS)
test_sha1_LDADD = $(LDADD)
test_sha1_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_sp1_OBJECTS = test_sp1.$(OBJEXT)
test_sp1_OBJECTS = $(am_test_sp1_OBJECTS)
test_sp1_LDADD = $(LDADD)
test_sp1_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_sp2_OBJECTS = test_sp2.$(OBJEXT)
test_sp2_OBJECTS = $(am_test_sp2_OBJECTS)
test_sp2_LDADD = $(LDADD)
test_sp2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_sp3_OBJECTS = test_sp3.$(OBJEXT)
test_sp3_OBJECTS = $(am_test_sp3_OBJECTS)
test_sp3_LDADD = $(LDADD)
test_sp3_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_srp_OBJECTS = test_srp.$(OBJEXT)
test_srp_OBJECTS = $(am_test_srp_OBJECTS)
test_srp_LDADD = $(LDADD)
test_srp_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_tiger_OBJECTS = test_tiger.$(OBJEXT)
test_tiger_OBJECTS = $(am_test_tiger_OBJECTS)
test_tiger_LDADD = $(LDADD)
test_tiger_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_timecb_OBJECTS = test_timecb.$(OBJEXT)
test_timecb_OBJECTS = $(am_test_timecb_OBJECTS)
test_timecb_LDADD = $(LDADD)
test_timecb_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_vec_OBJECTS = test_vec.$(OBJEXT)
test_vec_OBJECTS = $(am_test_vec_OBJECTS)
test_vec_LDADD = $(LDADD)
test_vec_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(test_aes_SOURCES) $(test_aiod_SOURCES) \
	$(test_armor_SOURCES) $(test_axprt_SOURCES) \
	$(test_backoff_SOURCES) $(test_barrett_SOURCES) \
	$(test_bbuddy_SOURCES) $(test_bitvec_SOURCES) \
	$(test_blowfish_SOURCES) $(test_esign_SOURCES) \
	$(test_hashcash_SOURCES) $(test_itree_SOURCES) \
	$(test_montgom_SOURCES) $(test_mpz_raw_SOURCES) \
	$(test_mpz_square_SOURCES) $(test_mpz_xor_SOURCES) \
	$(test_passfd_SOURCES) $(test_rabin_SOURCES) \
	$(test_rctree_SOURCES) $(test_schnorr_SOURCES) \
	$(test_sha1_SOURCES) $(test_sp1_SOURCES) $(test_sp2_SOURCES) \
	$(test_sp3_SOURCES) $(test_srp_SOURCES) $(test_tiger_SOURCES) \
	$(test_timecb_SOURCES) $(test_vec_SOURCES)
DIST_SOURCES = $(test_aes_SOURCES) $(test_aiod_SOURCES) \
	$(test_armor_SOURCES) $(test_axprt_SOURCES) \
	$(test_backoff_SOURCES) $(test_barrett_SOURCES) \
	$(test_bbuddy_SOURCES) $(test_bitvec_SOURCES) \
	$(test_blowfish_SOURCES) $(test_esign_SOURCES) \
	$(test_hashcash_SOURCES) $(test_itree_SOURCES) \
	$(test_montgom_SOURCES) $(test_mpz_raw_SOURCES) \
	$(test_mpz_square_SOURCES) $(test_mpz_xor_SOURCES) \
	$(test_passfd_SOURCES) $(test_rabin_SOURCES) \
	$(test_rctree_SOURCES) $(test_schnorr_SOURCES) \
	$(test_sha1_SOURCES) $(test_sp1_SOURCES) $(test_sp2_SOURCES) \
	$(test_sp3_SOURCES) $(test_srp_SOURCES) $(test_tiger_SOURCES) \
	$(test_timecb_SOURCES) $(test_vec_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run tar
AR = ar
AUTH_HELPER_LIB = 
AUTH_HELPER_STYLE = 
AUTOCONF = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = $(DEBUG) $(WFLAGS) $(ECFLAGS) $(CFLAGS_PROFILE)
CFLAGS_PROFILE = 
CPP = gcc -E
CPPFLAGS = -I$(top_srcdir)/async -I$(top_srcdir)/crypt -m32 -L/usr/lib32   -I$(top_srcdir) -I$(top_srcdir)/libsafeptr -I$(top_srcdir)/arpc -I$(top_srcdir)/sfsmisc -I$(top_srcdir)/libtame -I$(top_srcdir)/libaapp -I$(top_builddir)/libaapp -I$(top_builddir)/libtame -I$(top_builddir)/async -I$(top_builddir)/svc -I$(top_builddir)/crypt -I$(top_srcdir)/svc -DEXECDIR=\"$(sfsexecdir)\" -DETCDIR=\"$(etcdir)\" -DDATADIR=\"$(pkgdatadir)\" -DPIDDIR=\"$(piddir)\" -DSFSDIR=\"$(sfsdir)\"
CXX = g++
CXXCPP = g++ -E
CXXDEBUG = -m32 -L/usr/lib32
CXXDEPMODE = depmode=gcc3
CXXFLAGS = $(CXXDEBUG) $(CXXWFLAGS) $(ECXXFLAGS) $(CFLAGS_PROFILE)
CXXNOERR = -Wno-error
CXXWFLAGS = -Wall -Werror -Wno-unused
CYGPATH_W = echo
DEBUG = -m32 -L/usr/lib32
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECFLAGS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ECXXFLAGS = 
EGREP = /bin/grep -E
ETAGS_ARGS = -C /dev/null
EXEEXT = 
FGREP = /bin/grep -F
GMP_DIR = 
GREP = /bin/grep
INSTALL = /usr/bin/install -C
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_i386
LDADD = $(LIBTAME) $(LIBSFSCRYPT) $(LIBARPC) $(LIBSAFEPTR) $(LIBASYNC) $(LIBGMP) 
LDADD_STD_ALL = 
LDADD_THR = 
LDEPS = $(LIBSFSMISC) $(LIBSFSCRYPT) $(LIBARPC) $(LIBSAFEPTR) $(LIBASYNC)
LDFLAGS =  -L/usr/lib32
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBAAPP = $(top_builddir)/libaapp/libaapp.la
LIBADB = $(top_builddir)/adb/btree/libbtree.la
LIBARPC = $(top_builddir)/arpc/libarpc.la
LIBASYNC = $(top_builddir)/async/libasync.la
LIBCRYPT = -lcrypt
LIBGMP = -lgmp
LIBOBJS = 
LIBPY = 
LIBS = -lnsl  -lresolv
LIBSAFEPTR = $(top_builddir)/libsafeptr/libsafeptr.la
LIBSFSCRYPT = $(top_builddir)/crypt/libsfscrypt.la
LIBSFSMISC = $(top_builddir)/sfsmisc/libsfsmisc.la
LIBSFSRODB = $(top_builddir)/sfsrodb/libsfsrodb.la
LIBSVC = $(top_builddir)/svc/libsvc.la
LIBTAME = $(top_builddir)/libtame/libtame.la
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_VERSION_INFO = -version-info 20
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
M4 = /usr/bin/m4
MAKEINFO = ${SHELL} /home/bft/RRBFT_v2/sfslite/missing --run makeinfo
MALLOCK = $(top_builddir)/sfsmisc/mallock.o
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NOPAGING = 
NW = -w
OBJDUMP = objdump
OBJEXT = o
OPENSSL_DIR = 
OTOOL = 
OTOOL64 = 
PACKAGE = sfslite
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_DF = /bin/df
PATH_DMESG = /bin/dmesg
PATH_FSTAT = 
PATH_LOGGER = /usr/bin/logger
PATH_LS = /bin/ls
PATH_LSOF = /usr/bin/lsof
PATH_NETSTAT = /bin/netstat
PATH_NFSSTAT = 
PATH_NTPQ = 
PATH_PS = /bin/ps
PATH_SEPARATOR = :
PATH_SESSREG = 
PATH_SU = /bin/su
PATH_VMSTAT = /usr/bin/vmstat
PATH_W = /usr/bin/w
PATH_XAUTH = /usr/bin/xauth
PERL = /usr/bin/perl
PERL_POD_MAN = yes
POD2MAN = /usr/bin/pod2man
PTYLIB = -lutil
RANLIB = ranlib
RPCC = $(top_builddir)/rpcc/rpcc
SED = /bin/sed
SETUSERCONTEXTLIB = 
SET_MAKE = 
SFSRO_PROXY_LIB = 
SHELL = /bin/bash
SHORTVERSION = 1.2
STRIP = strip
TAME = $(top_builddir)/tame/tame
UVFS_DIR = 
VERSION = 1.2.8.5
WFLAGS = -Wall -Werror -Wno-unused
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/lib
X_PRE_LIBS = 
YACC = bison -y
YFLAGS = 
_PATH_CPP = /usr/bin/cpp
abs_builddir = /home/bft/RRBFT_v2/sfslite/tests
abs_srcdir = /home/bft/RRBFT_v2/sfslite/tests
abs_top_builddir = /home/bft/RRBFT_v2/sfslite
abs_top_srcdir = /home/bft/RRBFT_v2/sfslite
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
etcdir = /etc/sfs
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/bft/RRBFT_v2/sfslite/install-sh
layoutversion = 1.2.8.5
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
make_symlink = 1
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
piddir = /var/run
prefix = /home/bft/RRBFT_v2/sfs
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sfsbindir = ${pkglibdir}-${SHORTVERSION}${sfstagdir}
sfsdir = /var/sfs
sfsexecdir = ${pkglibdir}-${SHORTVERSION}${sfstagdir}
sfsincludedir = ${pkgincludedir}-${SHORTVERSION}${sfstagdir}
sfsincludedirp = ${pkgincludedir}-${SHORTVERSION}
sfslibdir = ${pkglibdir}-${SHORTVERSION}${sfstagdir}
sfslibpdir = ${pkglibdir}-${SHORTVERSION}
sfstag = 
sfstagdir = 
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  uvfs
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
test_aes_SOURCES = test_aes.C
test_aiod_SOURCES = test_aiod.C
test_armor_SOURCES = test_armor.C
test_axprt_SOURCES = test_axprt.C
test_backoff_SOURCES = test_backoff.C
test_barrett_SOURCES = test_barrett.C
test_bbuddy_SOURCES = test_bbuddy.C
test_bitvec_SOURCES = test_bitvec.C
test_blowfish_SOURCES = test_blowfish.C
test_esign_SOURCES = test_esign.C
test_hashcash_SOURCES = test_hashcash.C
test_itree_SOURCES = test_itree.C
test_montgom_SOURCES = test_montgom.C
test_mpz_raw_SOURCES = test_mpz_raw.C
test_mpz_square_SOURCES = test_mpz_square.C
test_mpz_xor_SOURCES = test_mpz_xor.C
test_passfd_SOURCES = test_passfd.C
test_rabin_SOURCES = test_rabin.C
test_sha1_SOURCES = test_sha1.C
test_srp_SOURCES = test_srp.C
test_tiger_SOURCES = test_tiger.C
test_timecb_SOURCES = test_timecb.C
test_schnorr_SOURCES = test_schnorr.C
test_rctree_SOURCES = test_rctree.C
test_vec_SOURCES = test_vec.C
test_sp1_SOURCES = test_sp1.C
test_sp2_SOURCES = test_sp2.C
test_sp3_SOURCES = test_sp3.C
CLEANFILES = core *.core *~ *.rpo
MAINTAINERCLEANFILES = Makefile.in
EXTRA_DIST = .cvsignore
all: all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test_aes$(EXEEXT): $(test_aes_OBJECTS) $(test_aes_DEPENDENCIES) 
	@rm -f test_aes$(EXEEXT)
	$(CXXLINK) $(test_aes_OBJECTS) $(test_aes_LDADD) $(LIBS)
test_aiod$(EXEEXT): $(test_aiod_OBJECTS) $(test_aiod_DEPENDENCIES) 
	@rm -f test_aiod$(EXEEXT)
	$(CXXLINK) $(test_aiod_OBJECTS) $(test_aiod_LDADD) $(LIBS)
test_armor$(EXEEXT): $(test_armor_OBJECTS) $(test_armor_DEPENDENCIES) 
	@rm -f test_armor$(EXEEXT)
	$(CXXLINK) $(test_armor_OBJECTS) $(test_armor_LDADD) $(LIBS)
test_axprt$(EXEEXT): $(test_axprt_OBJECTS) $(test_axprt_DEPENDENCIES) 
	@rm -f test_axprt$(EXEEXT)
	$(CXXLINK) $(test_axprt_OBJECTS) $(test_axprt_LDADD) $(LIBS)
test_backoff$(EXEEXT): $(test_backoff_OBJECTS) $(test_backoff_DEPENDENCIES) 
	@rm -f test_backoff$(EXEEXT)
	$(CXXLINK) $(test_backoff_OBJECTS) $(test_backoff_LDADD) $(LIBS)
test_barrett$(EXEEXT): $(test_barrett_OBJECTS) $(test_barrett_DEPENDENCIES) 
	@rm -f test_barrett$(EXEEXT)
	$(CXXLINK) $(test_barrett_OBJECTS) $(test_barrett_LDADD) $(LIBS)
test_bbuddy$(EXEEXT): $(test_bbuddy_OBJECTS) $(test_bbuddy_DEPENDENCIES) 
	@rm -f test_bbuddy$(EXEEXT)
	$(CXXLINK) $(test_bbuddy_OBJECTS) $(test_bbuddy_LDADD) $(LIBS)
test_bitvec$(EXEEXT): $(test_bitvec_OBJECTS) $(test_bitvec_DEPENDENCIES) 
	@rm -f test_bitvec$(EXEEXT)
	$(CXXLINK) $(test_bitvec_OBJECTS) $(test_bitvec_LDADD) $(LIBS)
test_blowfish$(EXEEXT): $(test_blowfish_OBJECTS) $(test_blowfish_DEPENDENCIES) 
	@rm -f test_blowfish$(EXEEXT)
	$(CXXLINK) $(test_blowfish_OBJECTS) $(test_blowfish_LDADD) $(LIBS)
test_esign$(EXEEXT): $(test_esign_OBJECTS) $(test_esign_DEPENDENCIES) 
	@rm -f test_esign$(EXEEXT)
	$(CXXLINK) $(test_esign_OBJECTS) $(test_esign_LDADD) $(LIBS)
test_hashcash$(EXEEXT): $(test_hashcash_OBJECTS) $(test_hashcash_DEPENDENCIES) 
	@rm -f test_hashcash$(EXEEXT)
	$(CXXLINK) $(test_hashcash_OBJECTS) $(test_hashcash_LDADD) $(LIBS)
test_itree$(EXEEXT): $(test_itree_OBJECTS) $(test_itree_DEPENDENCIES) 
	@rm -f test_itree$(EXEEXT)
	$(CXXLINK) $(test_itree_OBJECTS) $(test_itree_LDADD) $(LIBS)
test_montgom$(EXEEXT): $(test_montgom_OBJECTS) $(test_montgom_DEPENDENCIES) 
	@rm -f test_montgom$(EXEEXT)
	$(CXXLINK) $(test_montgom_OBJECTS) $(test_montgom_LDADD) $(LIBS)
test_mpz_raw$(EXEEXT): $(test_mpz_raw_OBJECTS) $(test_mpz_raw_DEPENDENCIES) 
	@rm -f test_mpz_raw$(EXEEXT)
	$(CXXLINK) $(test_mpz_raw_OBJECTS) $(test_mpz_raw_LDADD) $(LIBS)
test_mpz_square$(EXEEXT): $(test_mpz_square_OBJECTS) $(test_mpz_square_DEPENDENCIES) 
	@rm -f test_mpz_square$(EXEEXT)
	$(CXXLINK) $(test_mpz_square_OBJECTS) $(test_mpz_square_LDADD) $(LIBS)
test_mpz_xor$(EXEEXT): $(test_mpz_xor_OBJECTS) $(test_mpz_xor_DEPENDENCIES) 
	@rm -f test_mpz_xor$(EXEEXT)
	$(CXXLINK) $(test_mpz_xor_OBJECTS) $(test_mpz_xor_LDADD) $(LIBS)
test_passfd$(EXEEXT): $(test_passfd_OBJECTS) $(test_passfd_DEPENDENCIES) 
	@rm -f test_passfd$(EXEEXT)
	$(CXXLINK) $(test_passfd_OBJECTS) $(test_passfd_LDADD) $(LIBS)
test_rabin$(EXEEXT): $(test_rabin_OBJECTS) $(test_rabin_DEPENDENCIES) 
	@rm -f test_rabin$(EXEEXT)
	$(CXXLINK) $(test_rabin_OBJECTS) $(test_rabin_LDADD) $(LIBS)
test_rctree$(EXEEXT): $(test_rctree_OBJECTS) $(test_rctree_DEPENDENCIES) 
	@rm -f test_rctree$(EXEEXT)
	$(CXXLINK) $(test_rctree_OBJECTS) $(test_rctree_LDADD) $(LIBS)
test_schnorr$(EXEEXT): $(test_schnorr_OBJECTS) $(test_schnorr_DEPENDENCIES) 
	@rm -f test_schnorr$(EXEEXT)
	$(CXXLINK) $(test_schnorr_OBJECTS) $(test_schnorr_LDADD) $(LIBS)
test_sha1$(EXEEXT): $(test_sha1_OBJECTS) $(test_sha1_DEPENDENCIES) 
	@rm -f test_sha1$(EXEEXT)
	$(CXXLINK) $(test_sha1_OBJECTS) $(test_sha1_LDADD) $(LIBS)
test_sp1$(EXEEXT): $(test_sp1_OBJECTS) $(test_sp1_DEPENDENCIES) 
	@rm -f test_sp1$(EXEEXT)
	$(CXXLINK) $(test_sp1_OBJECTS) $(test_sp1_LDADD) $(LIBS)
test_sp2$(EXEEXT): $(test_sp2_OBJECTS) $(test_sp2_DEPENDENCIES) 
	@rm -f test_sp2$(EXEEXT)
	$(CXXLINK) $(test_sp2_OBJECTS) $(test_sp2_LDADD) $(LIBS)
test_sp3$(EXEEXT): $(test_sp3_OBJECTS) $(test_sp3_DEPENDENCIES) 
	@rm -f test_sp3$(EXEEXT)
	$(CXXLINK) $(test_sp3_OBJECTS) $(test_sp3_LDADD) $(LIBS)
test_srp$(EXEEXT): $(test_srp_OBJECTS) $(test_srp_DEPENDENCIES) 
	@rm -f test_srp$(EXEEXT)
	$(CXXLINK) $(test_srp_OBJECTS) $(test_srp_LDADD) $(LIBS)
test_tiger$(EXEEXT): $(test_tiger_OBJECTS) $(test_tiger_DEPENDENCIES) 
	@rm -f test_tiger$(EXEEXT)
	$(CXXLINK) $(test_tiger_OBJECTS) $(test_tiger_LDADD) $(LIBS)
test_timecb$(EXEEXT): $(test_timecb_OBJECTS) $(test_timecb_DEPENDENCIES) 
	@rm -f test_timecb$(EXEEXT)
	$(CXXLINK) $(test_timecb_OBJECTS) $(test_timecb_LDADD) $(LIBS)
test_vec$(EXEEXT): $(test_vec_OBJECTS) $(test_vec_DEPENDENCIES) 
	@rm -f test_vec$(EXEEXT)
	$(CXXLINK) $(test_vec_OBJECTS) $(test_vec_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test_aes.Po
include ./$(DEPDIR)/test_aiod.Po
include ./$(DEPDIR)/test_armor.Po
include ./$(DEPDIR)/test_axprt.Po
include ./$(DEPDIR)/test_backoff.Po
include ./$(DEPDIR)/test_barrett.Po
include ./$(DEPDIR)/test_bbuddy.Po
include ./$(DEPDIR)/test_bitvec.Po
include ./$(DEPDIR)/test_blowfish.Po
include ./$(DEPDIR)/test_esign.Po
include ./$(DEPDIR)/test_hashcash.Po
include ./$(DEPDIR)/test_itree.Po
include ./$(DEPDIR)/test_montgom.Po
include ./$(DEPDIR)/test_mpz_raw.Po
include ./$(DEPDIR)/test_mpz_square.Po
include ./$(DEPDIR)/test_mpz_xor.Po
include ./$(DEPDIR)/test_passfd.Po
include ./$(DEPDIR)/test_rabin.Po
include ./$(DEPDIR)/test_rctree.Po
include ./$(DEPDIR)/test_schnorr.Po
include ./$(DEPDIR)/test_sha1.Po
include ./$(DEPDIR)/test_sp1.Po
include ./$(DEPDIR)/test_sp2.Po
include ./$(DEPDIR)/test_sp3.Po
include ./$(DEPDIR)/test_srp.Po
include ./$(DEPDIR)/test_tiger.Po
include ./$(DEPDIR)/test_timecb.Po
include ./$(DEPDIR)/test_vec.Po

.C.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(check_PROGRAMS): $(LDEPS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
